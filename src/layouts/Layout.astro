---
import "../styles/global.css";
import { Toaster } from "../components/ui/sonner";
import { HeaderAuthControls } from "../components/layout/HeaderAuthControls";
import { MobileNav } from "../components/layout/MobileNav";
import { ThemeProvider } from "../components/providers/ThemeProvider";

interface Props {
  title?: string;
}

const { title = "Flashcards AI" } = Astro.props;
const session = Astro.locals.session;
const user = Astro.locals.user;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <ThemeProvider client:only="react">
      <header
        class="sticky top-0 z-50 w-full border-b border-border/40 bg-background backdrop-blur supports-[backdrop-filter]:bg-background/80"
      >
        <div class="container flex h-14 items-center max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex items-center gap-2">
            <MobileNav client:idle isAuthenticated={!!session} />
            <a href="/" class="flex items-center">
              <span class="font-regular">Flashcards AI</span>
            </a>
          </div>
          <nav class="hidden md:flex flex-1 justify-end">
            {
              session && (
                <div class="flex gap-6 mr-6 items-center">
                  <a href="/" class="text-sm font-medium text-foreground/80 hover:text-foreground transition-colors">
                    Generate
                  </a>
                  <a
                    href="/flashcards"
                    class="text-sm font-medium text-foreground/80 hover:text-foreground transition-colors"
                  >
                    My Flashcards
                  </a>
                </div>
              )
            }
            <HeaderAuthControls client:idle isAuthenticated={!!session} userEmail={user?.email ?? null} />
          </nav>
          <div class="md:hidden flex flex-1 justify-end">
            <HeaderAuthControls
              client:idle
              isAuthenticated={!!session}
              userEmail={user?.email ?? null}
              showLabels={false}
            />
          </div>
        </div>
      </header>
      <main class="min-h-screen">
        <slot />
      </main>
      <Toaster client:only="react" />
    </ThemeProvider>
  </body>

  <style>
    html,
    body {
      margin: 0;
      width: 100%;
      height: 100%;
    }
  </style>
</html>
