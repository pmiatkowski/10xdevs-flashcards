name: Pull Request

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  unit-test:
    needs: lint
    name: Unit Tests
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 1

  e2e-test:
    environment: "Integration"
    needs: lint
    name: E2E Tests
    runs-on: ubuntu-latest
    env:
      CI: true
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      OPENROUTER_MODEL: ${{ secrets.OPENROUTER_MODEL }}
      OPENROUTER_HTTP_REFERER: ${{ secrets.OPENROUTER_HTTP_REFERER }}
      OPENROUTER_APP_TITLE: ${{ secrets.OPENROUTER_APP_TITLE }}
      E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
      PLAYWRIGHT_TEST_BASE_URL: ${{ secrets.PLAYWRIGHT_TEST_BASE_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium

      - name: Build project
        run: npm run build

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          # Add environment variable to update snapshots if needed
          UPDATE_SNAPSHOTS: ${{ github.event_name == 'workflow_dispatch' }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 1

      - name: Upload test snapshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-snapshots
          path: e2e/**/*-snapshots/
          retention-days: 1

  status-comment:
    needs: [unit-test, e2e-test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage

      - name: Download E2E report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Create status comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let coverage = 'N/A';
            // Check if coverage file exists before trying to read it
            if (fs.existsSync('./coverage/coverage-summary.json')) {
              try {
                const coverageSummary = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
                coverage = coverageSummary.total.lines.pct;
              } catch (error) {
                console.log('Error reading coverage file:', error);
              }
            } else {
              console.log('Coverage file not found');
            }

            // Generate comment
            const comment = `## Test Results Summary

            ### Unit Tests Coverage: ${coverage}%

            ### E2E Tests
            A full report has been uploaded as an artifact.

            ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}
            `;

            // Post comment
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
